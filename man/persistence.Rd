% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/persistence.r
\name{persistence}
\alias{persistence}
\alias{diagram}
\alias{persistence_diagram}
\alias{as_persistence}
\alias{as_persistence.default}
\alias{as_persistence.persistence}
\alias{as_persistence.list}
\alias{as_persistence.diagram}
\alias{as_persistence.PHom}
\alias{print.persistence}
\alias{get_pairs}
\alias{as.data.frame.persistence}
\title{Efficient Format for Persistence Data (Diagrams)}
\usage{
as_persistence(x, ...)

\method{as_persistence}{default}(x, modulus = NULL, max_dim = NULL, threshold = NULL, ...)

\method{as_persistence}{persistence}(x, ...)

\method{as_persistence}{list}(x, ...)

\method{as_persistence}{diagram}(x, ...)

\method{as_persistence}{PHom}(x, ...)

\method{print}{persistence}(x, ...)

get_pairs(x, degree, ...)

\method{as.data.frame}{persistence}(x, row.names = NULL, optional = TRUE, ...)
}
\arguments{
\item{x}{Persistence data to be transformed; either a â‰¥3-column matrix (or
object coercible to one) with dimension/degree, start/birth, and end/death
columns, a list whose first element is such an object, an object of class
'PHom' as returned by \verb{[ripserr::vietoris_rips()]}, or (a list as returned
by a \verb{*Diag()} function in \strong{TDA} (e.g. \verb{[TDA::ripsDiag()]}) whose first
element is) an object of class 'diagram'.}

\item{...}{Parameters passed to methods.}

\item{modulus, max_dim, threshold}{Possibly missing parameters of the
calculation of the persistence data \code{x} to be included in the 'persistence'
object.}

\item{degree}{Non-negative integer; the homology degree for which to recover
a matrix of persistence pairs.}

\item{row.names}{\code{NULL} or a character vector giving the row
    names for the data frame.  Missing values are not allowed.}

\item{optional}{logical. If \code{TRUE}, setting row names and
    converting column names (to syntactic names: see
    \code{\link[base]{make.names}}) is optional.  Note that all of \R's
    \pkg{base} package \code{as.data.frame()} methods use
    \code{optional} only for column names treatment, basically with the
    meaning of \code{\link[base]{data.frame}(*, check.names = !optional)}.
    See also the \code{make.names} argument of the \code{matrix} method.}
}
\value{
Persistence data in the form of a list with named entries:
\itemize{
\item{pairs}{A list of 2-column matrices containing birth-death pairs
in each dimension/degree, starting with zero.}
\item{modulus}{The (integer) modulus of the prime field
in which homology coefficientts were calculated.}
\item{max_dim}{The (integer) maximum dimension
of calculated features.}
\item{threshold}{The (real) maximum length of an edge
in the simplicial filtration.}
}
}
\description{
Transform persistence data to the format used by \strong{plt}.
}
\details{
This class and function will soon be spun off to a lower-level package that
can be imported by others as needed. Refer to
\url{http://adv-r.had.co.nz/S3.html} for guidance on methods to make available.
}
\examples{
# sample points
points <- tdaunif::sample_torus_tube(100, 5)

# compute persistence
pd <- as_persistence(ripserr::vietoris_rips(points, max_dim = 2L, threshold = 1))
print(pd)

# compute persistence landscapes for 0-cycles
pl <- landscape(pd, degree = 1, exact = TRUE)
print(pl)

# first landscape layer
print(pl$getInternal()[[1L]])
# plot all landscape layers
plot(pl)
# sample points
points <- tdaunif::sample_torus_tube(60L, 2.5)

# compute persistence data, retaining parameters
pd <- as_persistence(TDA::ripsDiag(points, maxdimension = 2L, maxscale = 3))
print(dim(pd$pairs[[2L]]))

# compute persistence landscape for 1-dimensional cycles
pl <- landscape(pd, degree = 1L, threshold = pd$threshold)
print(pl)

# landscape dimensions
print(dim(pl$getInternal()))
# landscape values
print(pl$getInternal())
# plot landscape
plot(pl)

# custom parameters
pl <- landscape(pd, degree = 1L, dx = 0.1, max_x = 2, threshold = pd$threshold)
print(pl)
plot(pl)
}
